1. 자료형 (Data Types)
	1. int:
		정수를 나타내는 자료형
		대부분의 시스템에서는 32비트(4바이트) 또는 64비트(8바이트) 크기
		부호 있는 정수를 나타내며, 일반적으로 -2,147,483,648부터 2,147,483,647까지의 값을 저장
	2. float:
		float는 단정도 부동 소수점 숫자를 나타내는 자료형
		보통 32비트(4바이트) 크기
		부동 소수점 형식으로 소수를 표현하며, 약 6-9자리의 정밀도를 제공
	3. double:
		double은 배정도 부동 소수점 숫자를 나타내는 자료형
		보통 64비트(8바이트) 크기
		float보다 더 큰 범위의 값과 더 높은 정밀도를 제공
	4. char:
		char는 문자를 나타내는 자료형
		보통 8비트(1바이트) 크기
		ASCII 또는 유니코드 문자를 저장
	5. bool:
		bool은 불리언 값을 나타내는 자료형
		보통 8비트(1바이트) 크기를 가집니다.
		true 또는 false 값을 저장
	6. short:
		short는 짧은 정수를 나타내는 자료형
		대부분의 시스템에서는 16비트(2바이트) 크기
		int보다 작은 범위의 정수를 저장
	7. long:
		long은 긴 정수를 나타내는 자료형
		시스템에 따라 크기가 다르지만, 보통 int와 같거나 더 큰 크기
	8. long long:
		long long은 더 긴 정수를 나타내는 자료형
		보통 64비트(8바이트) 크기
		long보다 큰 범위의 정수를 저장
	9. uint8_t:
		이 자료형은 8비트(1바이트) 크기를 가집니다. 따라서 이 자료형은 0부터 2^8 - 1 (즉, 255)까지의 값을 저장
		1바이트를 사용하며, 0에서 255까지의 숫자를 표현하는 데 사용
	10. uint16_t:
		이 자료형은 16비트(2바이트) 크기를 가집니다. 따라서 이 자료형은 0부터 2^16 - 1 (즉, 65535)까지의 값을 저장
		2바이트를 사용하며, 0에서 65535까지의 숫자를 표현하는 데 사용
	11. uint32_t:
		이 자료형은 32비트(4바이트) 크기를 가집니다. 따라서 이 자료형은 0부터 약 42억까지의 값을 저장
		4바이트를 사용하며, 0부터 약 42억까지의 숫자를 표현하는 데 사용

2. 포인터 (Pointers):
	포인터는 변수의 메모리 주소를 저장하는 변수
	메모리 주소는 바이트 단위로 표현
	예를 들어, int* ptr;은 int형 변수를 가리키는 포인터를 정의. 이때 ptr은 해당 int형 변수의 메모리 주소를 저장

3. 2진수 (Binary):
	2진수는 0과 1로만 이루어진 숫자로 구성
	예를 들어, 2진수 101은 다음과 같이 10진수로 변환
		101 = (1x2^2) + (0x2^1) + (1x2^0) = 5

4. 8진수 (Octal):
	8진수는 0부터 7까지의 숫자로 구성
	10진수에서 8진수로 변환할 때, 8진수 10은 10진수의 8과 같으며, 8진수 11은 10진수의 9와 같다.

5. 16진수 (Hexadecimal):
	16진수는 0부터 9까지의 숫자와 A부터 F까지의 알파벳으로 구성
	10진수에서 16진수로 변환할 때, 16진수 10은 10진수의 16과 같으며, 16진수 A는 10진수의 11, 16진수 B는 10진수의 12, ..., 16진수 F는 10진수의 15와 같다.
	예를 들어, 16진수 1A3F는 다음과 같이 10진수로 변환
		1A3F = (1x16^3) + (10x16^2) + (3x16^1) + (15xx16^0) = 6655
